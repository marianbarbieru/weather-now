{"version":3,"sources":["Input.js","City.js","Weather.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","state","city","cityName","cityId","country","lat","long","region","temperature","realFeel","humidity","pressure","uvIndex","uvIndexText","windSpeed","windDirection","visibility","cloudCover","icon","text","getData","bind","handleSubmit","handleChange","axios","get","this","apiKey","res","resData","data","setState","LocalizedName","Key","Country","GeoPosition","Latitude","Longitude","Region","EnglishName","cityWh","cityData","Temperature","Metric","Value","RealFeelTemperature","Pressure","UVIndex","UVIndexText","RelativeHumidity","Wind","Speed","Direction","Localized","Visibility","CloudCover","WeatherIcon","WeatherText","epochTime","EpochTime","newCity","id","uuidv4","create","console","log","alert","evt","preventDefault","target","name","value","className","onSubmit","htmlFor","type","onChange","placeholder","required","href","Component","defaultProps","City","removeCity","remove","imgSc","localTime","Date","date","toLocaleString","src","alt","feels","UV","UVText","onClick","Weather","cities","createCity","handleRemove","filter","citiesWh","map","key","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.94c33a0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './css/Input.css';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './index.css';\r\n\r\nexport default class Input extends Component {\r\n\tstatic defaultProps = {\r\n\t\tapiKey: 'irtFAaS7MxuaQq70RX4v0TEpoPdOYDfA',\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcity: '',\r\n\t\t\tcityName: '',\r\n\t\t\tcityId: '',\r\n\t\t\tcountry: '',\r\n\t\t\tlat: '',\r\n\t\t\tlong: '',\r\n\t\t\tregion: '',\r\n\t\t\ttemperature: '',\r\n\t\t\trealFeel: '',\r\n\t\t\thumidity: '',\r\n\t\t\tpressure: '',\r\n\t\t\tuvIndex: '',\r\n\t\t\tuvIndexText: '',\r\n\t\t\twindSpeed: '',\r\n\t\t\twindDirection: '',\r\n\t\t\tvisibility: '',\r\n\t\t\tcloudCover: '',\r\n\t\t\ticon: '',\r\n\t\t\ttext: '',\r\n\t\t};\r\n\t\tthis.getData = this.getData.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\tasync getData() {\r\n\t\ttry {\r\n\t\t\tlet res = await axios.get(\r\n\t\t\t\t`http://dataservice.accuweather.com/locations/v1/cities/search?apikey=${this.props.apiKey}&q=${this.state.city}`\r\n\t\t\t);\r\n\t\t\tlet resData = res.data[0];\r\n\t\t\tthis.setState({\r\n\t\t\t\tcityName: resData.LocalizedName,\r\n\t\t\t\tcityId: resData.Key,\r\n\t\t\t\tcountry: resData.Country.LocalizedName,\r\n\t\t\t\tlat: resData.GeoPosition.Latitude,\r\n\t\t\t\tlong: resData.GeoPosition.Longitude,\r\n\t\t\t\tregion: resData.Region.EnglishName,\r\n\t\t\t});\r\n\t\t\tlet cityWh = await axios.get(\r\n\t\t\t\t`http://dataservice.accuweather.com/currentconditions/v1/${this.state.cityId}?apikey=${this.props.apiKey}&details=true`\r\n\t\t\t);\r\n\t\t\tlet cityData = cityWh.data[0];\r\n\t\t\tthis.setState({\r\n\t\t\t\ttemperature: cityData.Temperature.Metric.Value,\r\n\t\t\t\trealFeel: cityData.RealFeelTemperature.Metric.Value,\r\n\t\t\t\tpressure: cityData.Pressure.Metric.Value,\r\n\t\t\t\tuvIndex: cityData.UVIndex,\r\n\t\t\t\tuvIndexText: cityData.UVIndexText,\r\n\t\t\t\thumidity: cityData.RelativeHumidity,\r\n\t\t\t\twindSpeed: cityData.Wind.Speed.Metric.Value,\r\n\t\t\t\twindDirection: cityData.Wind.Direction.Localized,\r\n\t\t\t\tvisibility: cityData.Visibility.Metric.Value,\r\n\t\t\t\tcloudCover: cityData.CloudCover,\r\n\t\t\t\ticon: cityData.WeatherIcon,\r\n\t\t\t\ttext: cityData.WeatherText,\r\n\t\t\t\tepochTime: cityData.EpochTime,\r\n\t\t\t});\r\n\t\t\tconst newCity = { ...this.state, id: uuidv4() };\r\n\t\t\tthis.props.create(newCity);\r\n\t\t\tconsole.log(this.state);\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tconsole.log(cityData);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(\"Sorry, we couldn't find what you searched for! Try again!\");\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tthis.getData();\r\n\r\n\t\tthis.setState({ city: '' });\r\n\t}\r\n\thandleChange(evt) {\r\n\t\tthis.setState({ [evt.target.name]: evt.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className='Input' onSubmit={this.handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label className='Input-label' htmlFor='city'>\r\n\t\t\t\t\t\tCity:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname='city'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tid='city'\r\n\t\t\t\t\t\tvalue={this.state.city}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder='Search city'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='Input-btn'>Get Weather!</button>\r\n\t\t\t\t<h6 className='Input-link'>\r\n\t\t\t\t\tView more on{' '}\r\n\t\t\t\t\t<a href='https://www.accuweather.com/'>AccuWeather.com</a>\r\n\t\t\t\t</h6>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './css/City.css';\r\nimport './index.css';\r\n\r\nexport default class City extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.removeCity = this.removeCity.bind(this);\r\n\t}\r\n\tremoveCity() {\r\n\t\tthis.props.remove(this.props.id);\r\n\t}\r\n\trender() {\r\n\t\tlet imgSc;\r\n\t\tthis.props.icon < 10\r\n\t\t\t? (imgSc = `https://developer.accuweather.com/sites/default/files/0${this.props.icon}-s.png`)\r\n\t\t\t: (imgSc = `https://developer.accuweather.com/sites/default/files/${this.props.icon}-s.png`);\r\n\t\tlet localTime = new Date(this.props.date * 1000).toLocaleString();\r\n\t\treturn (\r\n\t\t\t<div className='city'>\r\n\t\t\t\t<h2 className='city-title'>{this.props.city}</h2>\r\n\t\t\t\t<div className='main-weather'>\r\n\t\t\t\t\t<div className='city-wheather-img'>\r\n\t\t\t\t\t\t<img src={imgSc} alt='weather' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='city-info-temp'>\r\n\t\t\t\t\t\t<h4 className='description'>{this.props.text}</h4>\r\n\t\t\t\t\t\t<h3 className='temperature'>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<i className='fas fa-temperature-low'></i>\r\n\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\t{this.props.temperature}&#176; C\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p>Feels like: {this.props.feels}&#176; C</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='city-info'>\r\n\t\t\t\t\t<div className='city-location'>\r\n\t\t\t\t\t\t<div className='city-country'>Country: {this.props.country}</div>\r\n\t\t\t\t\t\t<div className='city-region'>Region: {this.props.region}</div>\r\n\t\t\t\t\t\t<div className='geo'>\r\n\t\t\t\t\t\t\tLat: {this.props.lat}&#176; Long: {this.props.long}&#176;{' '}\r\n\t\t\t\t\t\t\t<i className='fas fa-map-marker-alt'></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='city-time'>Last updated: {localTime}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='city-wheather'>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tCloud cover: {this.props.cloudCover}%{' '}\r\n\t\t\t\t\t\t\t<i className='fas fa-cloud'></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>Air pressure: {this.props.pressure} mb</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tUV index: {this.props.UV} - {this.props.UVText}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tHumidity: {this.props.humidity} %{' '}\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<i className='fas fa-tint'></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tWind: {this.props.windSpeed} km/h,{' '}\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<i className='far fa-compass'></i>\r\n\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\t{this.props.windDirection}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tVisibility: {this.props.visibility} km{' '}\r\n\t\t\t\t\t\t\t<i className='fas fa-binoculars'></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='city-btn' onClick={this.removeCity}>\r\n\t\t\t\t\tDelete City Info <i className='far fa-trash-alt'></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport City from './City';\r\nimport './index.css';\r\n// import axios from 'axios';\r\n\r\nexport default class Weather extends Component {\r\n\tstatic defaultProps = {\r\n\t\tapiKey: 'irtFAaS7MxuaQq70RX4v0TEpoPdOYDfA',\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcities: [],\r\n\t\t};\r\n\t\tthis.createCity = this.createCity.bind(this);\r\n\t\tthis.handleRemove = this.handleRemove.bind(this);\r\n\t}\r\n\r\n\tcreateCity(newCity) {\r\n\t\tthis.setState({ cities: [...this.state.cities, newCity] });\r\n\t}\r\n\thandleRemove(id) {\r\n\t\tthis.setState({\r\n\t\t\tcities: this.state.cities.filter((city) => city.id !== id),\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet citiesWh = this.state.cities.map((city) => (\r\n\t\t\t<City\r\n\t\t\t\tkey={city.id}\r\n\t\t\t\tid={city.id}\r\n\t\t\t\tcity={city.cityName}\r\n\t\t\t\tregion={city.region}\r\n\t\t\t\tcountry={city.country}\r\n\t\t\t\tdate={city.epochTime}\r\n\t\t\t\tlat={city.lat}\r\n\t\t\t\tlong={city.long}\r\n\t\t\t\ttext={city.text}\r\n\t\t\t\tpressure={city.pressure}\r\n\t\t\t\tUV={city.uvIndex}\r\n\t\t\t\tUVText={city.uvIndexText}\r\n\t\t\t\ticon={city.icon}\r\n\t\t\t\ttemperature={city.temperature}\r\n\t\t\t\tfeels={city.realFeel}\r\n\t\t\t\thumidity={city.humidity}\r\n\t\t\t\twindSpeed={city.windSpeed}\r\n\t\t\t\twindDirection={city.windDirection}\r\n\t\t\t\tvisibility={city.visibility}\r\n\t\t\t\tcloudCover={city.cloudCover}\r\n\t\t\t\tremove={this.handleRemove}\r\n\t\t\t/>\r\n\t\t));\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Input create={this.createCity} />\r\n\t\t\t\t{citiesWh}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './css/footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer className='Footer'>\r\n\t\t\t\t<h6>Made by Marian Barbieru &copy; 2020</h6>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Weather from './Weather';\nimport './App.css';\nimport './index.css';\nimport Footer from './Footer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>Weather Now</h1>\n\t\t\t<Weather />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}